name: "MultiPathPlantClef"
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "/media/titanz/data3TB_02/PlantClefolddata_augmented/species_train_aug_lmdb"
    backend: LMDB
    batch_size: 45
  }
  transform_param {
    crop_size: 224
    mean_file: "/media/titanz/data3TB_02/PlantClefolddata_augmented/species_mean_aug.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
   source: "/media/titanz/data3TB_02/PlantClefolddata_augmented/species_test_aug_lmdb"
   backend: LMDB
   batch_size: 20
  }
  transform_param {
    crop_size: 224
    mean_file: "/media/titanz/data3TB_02/PlantClefolddata_augmented/species_mean_aug.binaryproto"
    mirror: false
  }
  include: { phase: TEST }
}

# ================ CONV1 =================#

layers {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: RELU
}
layers {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: CONVOLUTION
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: RELU
}
layers {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: RELU
}
layers {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: CONVOLUTION
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: RELU
}
layers {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# =============== SPLITING POINT ===========

layers {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}



layers {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: RELU
}
layers {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: RELU
}
layers {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: RELU
}
layers {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: RELU
}
layers {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: RELU
}
layers {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: RELU
}
layers {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: RELU
}
layers {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: RELU
}
layers {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: RELU
}
layers {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool5"
  top: "fc6"
  name: "fc6"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: RELU
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: RELU
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc8_S"
  bottom: "fc7"
  top: "fc8_S"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc8_S"
  bottom: "label"
  top: "loss/loss"
}
layers {
  name: "accuracy/top1"
  type: ACCURACY
  bottom: "fc8_S"
  bottom: "label"
  top: "accuracy@1"
  include: { phase: TEST }
  accuracy_param {
    top_k: 1
  }
}
layers {
  name: "accuracy/top5"
  type: ACCURACY
  bottom: "fc8_S"
  bottom: "label"
  top: "accuracy@5"
  include: { phase: TEST }
  accuracy_param {
    top_k: 5
  }
}

# ========== ORGAN ========
layers {
  bottom: "pool2"
  top: "conv3_1_O"
  name: "conv3_1_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}

layers {
  bottom: "conv3_1_O"
  top: "conv3_1_O"
  name: "relu3_1_O"
  type: RELU
}
layers {
  bottom: "conv3_1_O"
  top: "conv3_2_O"
  name: "conv3_2_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv3_2_O"
  top: "conv3_2_O"
  name: "relu3_2_O"
  type: RELU
}
layers {
  bottom: "conv3_2_O"
  top: "conv3_3_O"
  name: "conv3_3_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv3_3_O"
  top: "conv3_3_O"
  name: "relu3_3_O"
  type: RELU
}
layers {
  bottom: "conv3_3_O"
  top: "pool3_O"
  name: "pool3_O"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool3_O"
  top: "conv4_1_O"
  name: "conv4_1_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0

}
layers {
  bottom: "conv4_1_O"
  top: "conv4_1_O"
  name: "relu4_1_O"
  type: RELU
}
layers {
  bottom: "conv4_1_O"
  top: "conv4_2_O"
  name: "conv4_2_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv4_2_O"
  top: "conv4_2_O"
  name: "relu4_2_O"
  type: RELU
}
layers {
  bottom: "conv4_2_O"
  top: "conv4_3_O"
  name: "conv4_3_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv4_3_O"
  top: "conv4_3_O"
  name: "relu4_3_O"
  type: RELU
}
layers {
  bottom: "conv4_3_O"
  top: "pool4_O"
  name: "pool4_O"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool4_O"
  top: "conv5_1_O"
  name: "conv5_1_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv5_1_O"
  top: "conv5_1_O"
  name: "relu5_1_O"
  type: RELU
}
layers {
  bottom: "conv5_1_O"
  top: "conv5_2_O"
  name: "conv5_2_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv5_2_O"
  top: "conv5_2_O"
  name: "relu5_2_O"
  type: RELU
}
layers {
  bottom: "conv5_2_O"
  top: "conv5_3_O"
  name: "conv5_3_O"
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "conv5_3_O"
  top: "conv5_3_O"
  name: "relu5_3_O"
  type: RELU
}
layers {
  bottom: "conv5_3_O"
  top: "pool5_O"
  name: "pool5_O"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool5_O"
  top: "fc6_O"
  name: "fc6_O"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "fc6_O"
  top: "fc6_O"
  name: "relu6_O"
  type: RELU
}
layers {
  bottom: "fc6_O"
  top: "fc6_O"
  name: "drop6_O"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc6_O"
  top: "fc7_O"
  name: "fc7_O"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096

  }
  blobs_lr: 0
  blobs_lr: 0
}
layers {
  bottom: "fc7_O"
  top: "fc7_O"
  name: "relu7_O"
  type: RELU
}
layers {
  bottom: "fc7_O"
  top: "fc7_O"
  name: "drop7_O"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc8_OS"
  bottom: "fc7_O"
  top: "fc8_OS"
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 1000
  }
  blobs_lr: 1
  blobs_lr: 2
}
layers {
  name: "loss_organ"
  type: SOFTMAX_LOSS
  bottom: "fc8_OS"
  bottom: "label"
  top: "loss_organ"
}
layers {
  name: "accuracy_top1_O"
  type: ACCURACY
  bottom: "fc8_OS"
  bottom: "label"
  top: "accuracy_top1_O"
  include: { phase: TEST }
  accuracy_param {
    top_k: 1
  }
}
layers {
  name: "accuracy_top5_O"
  type: ACCURACY
  bottom: "fc8_OS"
  bottom: "label"
  top: "accuracy_top5_O"
  include: { phase: TEST }
  accuracy_param {
    top_k: 5
  }
}
